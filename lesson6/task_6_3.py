__author__ = 'Рейтер Валерия Борисовна'

# 3. Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби.
# Загрузить данные из обоих файлов и сформировать словарь: ключи — ФИО, значения — данные о хобби.
# Сохранить словарь в json-файл. Проверить сохранённые данные.
# Техническое задание
#
# Данные файлов синхронизированы построчно: 1-ой строке файла с ФИО соответствует 1-ая строка файла с хобби и т.п.
# При хранении данных используется принцип: одна строка — один пользователь.
# Разделитель между значениями — запятая. Не используем пакеты для парсинга CSV файлов. При формировании словаря
# хобби следует разделить символом «точка с запятой».
# Если в файле, хранящем данные о хобби, меньше записей, чем в файле с ФИО, то для оставшихся ФИО использовать
# вместо хобби None.
# Если наоборот — формируем словарь, исходя из количества ФИО и выходим из скрипта с кодом «1».
# При решении задачи считать, что объём данных в файлах во много раз меньше объема ОЗУ.
# Вы можете использовать здесь функции zip и zip_longest, но лучше обойтись без них.
# Примеры/Тесты:
#
# Фрагмент файла с данными о пользователях (task_3_users.csv):
#
#
# Иванов,Иван,Иванович
# Петров,Петр,Петрович
#
# Фрагмент файла с данными о хобби (task_3_hobby.csv):
#
#
# скалолазание,охота
# горные лыжи
#
# Фрагмент результирующего файла (task_3_rezult.txt):
#
#
# {'ИИИ': 'скалолазание;охота', 'ППП': 'горные лыжи'}
from os.path import join
import json

with open(file=join(".", "task_6_3", "task_3_users.csv"), mode="rt", encoding="UTF-8") as f_users:
    with open(file=join(".", "task_6_3", "task_3_hobby.csv"), mode="rt", encoding="UTF-8") as f_hobby:
        lst_users = f_users.readlines()
        lst_hobby = f_hobby.readlines()

result_dict = {}
for i in range(len(lst_users)):
    dict_key = lst_users[i].strip().split(",")
    dict_key = dict_key[1][0] + dict_key[1][0] + dict_key[2][0]
    if i >= len(lst_hobby):
        result_dict[dict_key] = None
    else:
        result_dict[dict_key] = lst_hobby[i].strip().replace(",", ";")

with open(file=join(".", "task_6_3", "result.json"), mode="wt", encoding='utf-8') as f_json:
    json.dump(result_dict, f_json, indent=2)
