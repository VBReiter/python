__author__ = 'Рейтер Валерия Борисовна'

# 4. [Задача со звездочкой]: усложненный вариант задания 3. Написать функцию thesaurus_adv(),
# принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь,
# в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме
# предыдущего задания и содержащие записи, в которых фамилия начинается с соответствующей буквы.
# Техническое задание
#
# Количество передаваемых строк в функцию может быть любым. Считаем, что переданы будут только корректные строки.
# Вернуть словарь, с ключами, отсортированными в алфавитном порядке.
# Примеры/Тесты:
#
#
# >>> thesaurus_adv("Иван Сергеев", "Алла Сидорова", "Инна Серова",
#            "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Василий Суриков")
# {
#    'А':{
#           'П': ['Петр Алексеев']},
#    'И': {
#           'И': ['Илья Иванов']},
#    'С': {
#           'А': ['Алла Сидорова', 'Анна Савельева'],
#           'В': ['Василий Суриков'],
#           'И': ['Иван Сергеев', 'Инна Серова']}}


def thesaurus_adv(*args):
    dict_surname = {}
    for arg in args:
        dict_name = {}
        arg_lst = arg.split()
        key_surname = arg_lst[-1][0]
        key_name = arg_lst[0][0]
        if dict_surname.get(key_surname):
            dict_name = dict_surname[key_surname]
            if dict_name.get(key_name):
                dict_name[key_name] += ', ' + arg
            else:
                dict_name[key_name] = arg
        else:
            dict_name[key_name] = arg
            dict_surname[key_surname] = dict_name
    for key in dict_surname:
        dict_surname[key] = dict(sorted(dict_surname[key].items()))
    dict_adv = dict(sorted(dict_surname.items()))
    return dict_adv


print(thesaurus_adv("Иван Сергеев", "Алла Сидорова", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева",
                    "Василий Суриков"))
